Immediate -
  - Establish gamedata [done]
  - Data serialization (think about storing as numbers for security, later) [done]
  - Machine/disk integration (saving machine data, filesystem abstraction, etc.) [done]
  - Establish lua integration (early so it's built into coming systems already) [done]
  - Basic system call library for machines to interact with outside IO [working on it]
  - Events (Needed for IO, especially key presses) [done]
  - Logging (like tracking everything that happens, do early so I don't have to add in later) [done]
  - Terminal (eventually rebuilt in lua but in java for now) [done]
  - Users (will make perms stuff way easier to assign) [done]
  - Please god sort through and deal with all the warnings [done]
  - Catch up on writing the documentation [done]
  - Serializer interface (DataHandler needs improvement) [done]
  - Save/load metadata about filesystem objects (file perms, access, etc.) [done (thank god this was such a pain haha)]
    - User groups to make permissions more like linux [done]
    - Actual read/write/execute perms for users/user groups/everyone [done]
    - Save exec perms (like library access stuff) but have most of the perms come from user data [done]
    - Save user data so it can be loaded and ready before filesystem stuff [done]
  - Processes [done]
    - Process lua globals [done]
    - Process interaction library functions [done]
  - Lua improvements [done]
    - Separate IO library from print (IO shouldn't be given out always, print should) [done]
    - Terminal ready function (needed by boot scripts because they can start before terminal is ready) [done]
    - Working directory [done]
    - Lua error handling [done]
      - Error table (message, code, and data fields returned from functions) [done]
    - More terminal control -> terminal (terminal.start(), terminal color controls, clear terminal, save output, etc.) [done]
    - Internal multithreading issues [this is as handled as it'll ever be]
      - I have no idea why I wrote the event handler the way I did that's so weird lmao, fix it [done]
      - Terminal direction needs to be on a file by file basis and not change unless the process explicitly wants it to [done]
      - There might be issues where several commands can't be processed at once even with several terminals [I can't fix this]
      - There might be issues with any program that needs to run continuously on a machine [I can't fix this]
      - Synchronicity is definitely going to be an issue with filesystem stuff at some point, think about a lock system
      - I could fix the issue of "while true do" loops with hooks but I don't want to limit program size
    - Filesystem interaction -> io [done]
    - Executing other scripts from lua -> ex [done]
    - User interaction -> usr [done]
    - 'std' library perms [done]
    - Directed output (select which terminal to output, if output should go to a file, etc.) [will do file thing when doing IOStreams]
    - Allow changing terminal window titles from lua (optional) [done]
  - Housekeeping (write all the new javadoc stuff for new functions) [done]
  - IO streams (honestly should have implemented this a while ago but whatever)
    - 'MachineStream' class [done]
    - 'IOComponent' interface to interact with the class [done]
    - Lua integration (make all input/output stuff go through io stream + code library to interact with the stream) [done]
  - Have the error when there's an error table also be printed to a terminal in java functions [done]
  - Dynamic device support
    - I'm not going to do devices, at least right now. I honestly think it's confusing and I don't know if it's necessary, given networks
  - Globals/kernel tables [done]
  - Add "perms" table to all scripts (basically an array of strings telling the script what libraries it has access to) [done]
  - Lua events library [done]
  - Metaterminal (terminal for making new machines, changing devices, etc. + think about economy for new stuff. Also debugging) [done]
  - Networking (pretty simple, pass data through event system. Try not to make java code fancy) [done]
  - Machine OS (this will be more fleshed out when I get to it)
    - Lua shell [done]
    - Redirect operator (make it possible to set a table as the IOStream so it can just pull output natively) [done]
    - Commands (the plan for these is going in a separate list when I start writing them)
    - Networking protocols
    - Irl networking capability (I want it to be possible to interact with the real world and other software)
  - Please god fix the text wrapping and weird graphical thing when terminal starts and the errors being weird with newlines [done]
  - Find out what makes the terminal get slow after a lot of output
  - Machine/GUI integration (predefined elements, html display, lua gui library)
  - Code editor (made in lua)
  - Audio support (stretch goal, not a high priority)
  - Default gameplay scenarios (prebuilt stuff to do)
  - Helper application to speed scenario production (generate files, run game, etc.)
  - Separate app to select and set up scenarios (very low priority, dependant)